{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useId } from 'react';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var ToggleSwitch = function ToggleSwitch(_ref) {\n  var checked = _ref.checked,\n    className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'blue' : _ref$color,\n    disabled = _ref.disabled,\n    label = _ref.label,\n    name = _ref.name,\n    onChange = _ref.onChange,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"checked\", \"className\", \"color\", \"disabled\", \"label\", \"name\", \"onChange\", \"theme\"]);\n  var id = useId();\n  var theme = mergeDeep(useTheme().theme.toggleSwitch, customTheme);\n  var toggle = function toggle() {\n    return onChange(!checked);\n  };\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n    toggle();\n  };\n  var handleKeyPress = function handleKeyPress(event) {\n    event.preventDefault();\n  };\n  return _jsxs(_Fragment, {\n    children: [name && checked && _jsx(\"input\", {\n      checked: checked,\n      hidden: true,\n      name: name,\n      readOnly: true,\n      type: \"checkbox\",\n      className: \"sr-only\"\n    }), _jsxs(\"button\", _objectSpread({\n      \"aria-checked\": checked,\n      \"aria-labelledby\": \"\".concat(id, \"-flowbite-toggleswitch-label\"),\n      disabled: disabled,\n      id: \"\".concat(id, \"-flowbite-toggleswitch\"),\n      onClick: handleClick,\n      onKeyPress: handleKeyPress,\n      role: \"switch\",\n      tabIndex: 0,\n      type: \"button\",\n      className: classNames(theme.root.base, theme.root.active[disabled ? 'off' : 'on'], className)\n    }, props, {\n      children: [_jsx(\"div\", {\n        \"data-testid\": \"flowbite-toggleswitch-toggle\",\n        className: classNames(theme.toggle.base, theme.toggle.checked[checked ? 'on' : 'off'], !disabled && checked && theme.toggle.checked.color[color])\n      }), _jsx(\"span\", {\n        \"data-testid\": \"flowbite-toggleswitch-label\",\n        id: \"\".concat(id, \"-flowbite-toggleswitch-label\"),\n        className: theme.root.label,\n        children: label\n      })]\n    }))]\n  });\n};\nToggleSwitch.displayName = 'ToggleSwitch';","map":null,"metadata":{},"sourceType":"module"}