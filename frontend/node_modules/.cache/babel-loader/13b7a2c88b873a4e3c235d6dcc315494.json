{"ast":null,"code":"import _toConsumableArray from \"/Users/mbriere/Desktop/dtech-group-7/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/mbriere/Desktop/dtech-group-7/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/mbriere/Desktop/dtech-group-7/frontend/src/Bot.jsx\";\nimport React, { useState } from \"react\";\nimport { DropdownMenu } from './DropdownMenu';\nimport Logo from './logo.png';\nexport var Bot = function Bot() {\n  var _useState = useState([{\n      text: \"Hi! How can I assist you today?\",\n      isUser: false\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userInput = _useState4[0],\n    setUserInput = _useState4[1];\n  var handleUserInput = function handleUserInput(event) {\n    setUserInput(event.target.value);\n  };\n  var handleUserMessage = function handleUserMessage() {\n    if (userInput.trim() !== \"\") {\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [{\n          text: userInput,\n          isUser: true\n        }]);\n      });\n      setUserInput(\"\");\n      // Implement the logic to process user input here\n      // You can update the bot's responses based on user input\n      // For simplicity, we'll just add a hard-coded response here\n      setTimeout(function () {\n        setMessages(function (prevMessages) {\n          return [].concat(_toConsumableArray(prevMessages), [{\n            text: \"A 401(k) is a retirement savings plan that is offered by many employers in the United States. It is named after the section of the U.S. Internal Revenue Code that governs this type of retirement account.\",\n            isUser: false\n          }]);\n        });\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    className: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Chatbot\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, messages.map(function (message, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: message.isUser ? \"user-message\" : \"bot-message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, message.text);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: handleUserInput,\n    placeholder: \"Type your message...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Send\"))));\n};\nexport default Bot;","map":{"version":3,"names":["React","useState","DropdownMenu","Logo","Bot","_useState","text","isUser","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","userInput","setUserInput","handleUserInput","event","target","value","handleUserMessage","trim","prevMessages","concat","_toConsumableArray","setTimeout","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","map","message","index","key","type","onChange","placeholder","onClick"],"sources":["/Users/mbriere/Desktop/dtech-group-7/frontend/src/Bot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DropdownMenu } from './DropdownMenu';\nimport Logo from './logo.png';\n\nexport const Bot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hi! How can I assist you today?\", isUser: false },\n  ]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleUserInput = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleUserMessage = () => {\n    if (userInput.trim() !== \"\") {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: userInput, isUser: true },\n      ]);\n      setUserInput(\"\");\n      // Implement the logic to process user input here\n      // You can update the bot's responses based on user input\n      // For simplicity, we'll just add a hard-coded response here\n      setTimeout(() => {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { text: \"A 401(k) is a retirement savings plan that is offered by many employers in the United States. It is named after the section of the U.S. Internal Revenue Code that governs this type of retirement account.\", isUser: false },\n        ]);\n      }, 500);\n    }\n  };\n\n  return (\n    <div className=\"chat-div\">\n        <DropdownMenu />\n        <img src={Logo} className=\"logo\"/>\n        <div className=\"chat-container\">\n          <h1>Chatbot</h1>\n          <div className=\"chat-messages\">\n            {messages.map((message, index) => (\n              <div key={index} className={message.isUser ? \"user-message\" : \"bot-message\"}>\n                {message.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"user-input\">\n            <input\n              type=\"text\"\n              value={userInput}\n              onChange={handleUserInput}\n              placeholder=\"Type your message...\"\n            />\n            <button onClick={handleUserMessage}>Send</button>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default Bot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}