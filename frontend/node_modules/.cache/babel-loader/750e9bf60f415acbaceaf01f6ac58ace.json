{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\nvar AccordionComponent = function AccordionComponent(_ref) {\n  var _ref$alwaysOpen = _ref.alwaysOpen,\n    alwaysOpen = _ref$alwaysOpen === void 0 ? false : _ref$alwaysOpen,\n    _ref$arrowIcon = _ref.arrowIcon,\n    arrowIcon = _ref$arrowIcon === void 0 ? HiChevronDown : _ref$arrowIcon,\n    children = _ref.children,\n    _ref$flush = _ref.flush,\n    flush = _ref$flush === void 0 ? false : _ref$flush,\n    _ref$collapseAll = _ref.collapseAll,\n    collapseAll = _ref$collapseAll === void 0 ? false : _ref$collapseAll,\n    className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"alwaysOpen\", \"arrowIcon\", \"children\", \"flush\", \"collapseAll\", \"className\", \"theme\"]);\n  var _useState = useState(collapseAll ? -1 : 0),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    _setOpen = _useState2[1];\n  var panels = useMemo(function () {\n    return Children.map(children, function (child, i) {\n      return cloneElement(child, {\n        alwaysOpen: alwaysOpen,\n        arrowIcon: arrowIcon,\n        flush: flush,\n        isOpen: isOpen === i,\n        setOpen: function setOpen() {\n          return _setOpen(isOpen === i ? -1 : i);\n        }\n      });\n    });\n  }, [alwaysOpen, arrowIcon, children, flush, isOpen]);\n  var theme = mergeDeep(useTheme().theme.accordion.root, customTheme);\n  return _jsx(\"div\", _objectSpread({\n    className: classNames(theme.base, theme.flush[flush ? 'on' : 'off'], className),\n    \"data-testid\": \"flowbite-accordion\"\n  }, props, {\n    children: panels\n  }));\n};\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport var Accordion = Object.assign(AccordionComponent, {\n  Panel: AccordionPanel,\n  Title: AccordionTitle,\n  Content: AccordionContent\n});","map":null,"metadata":{},"sourceType":"module"}