{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { NavbarBrand } from './NavbarBrand';\nimport { NavbarCollapse } from './NavbarCollapse';\nimport { NavbarContext } from './NavbarContext';\nimport { NavbarLink } from './NavbarLink';\nimport { NavbarToggle } from './NavbarToggle';\nvar NavbarComponent = function NavbarComponent(_ref) {\n  var border = _ref.border,\n    children = _ref.children,\n    className = _ref.className,\n    _ref$fluid = _ref.fluid,\n    fluid = _ref$fluid === void 0 ? false : _ref$fluid,\n    menuOpen = _ref.menuOpen,\n    rounded = _ref.rounded,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"border\", \"children\", \"className\", \"fluid\", \"menuOpen\", \"rounded\", \"theme\"]);\n  var _useState = useState(menuOpen),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var theme = mergeDeep(useTheme().theme.navbar.root, customTheme);\n  return _jsx(NavbarContext.Provider, {\n    value: {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen\n    },\n    children: _jsx(\"nav\", _objectSpread({\n      className: classNames(theme.base, theme.bordered[border ? 'on' : 'off'], theme.rounded[rounded ? 'on' : 'off'], className)\n    }, props, {\n      children: _jsx(\"div\", {\n        className: classNames(theme.inner.base, theme.inner.fluid[fluid ? 'on' : 'off']),\n        children: children\n      })\n    }))\n  });\n};\nNavbarComponent.displayName = 'Navbar';\nNavbarBrand.displayName = 'Navbar.Brand';\nNavbarCollapse.displayName = 'Navbar.Collapse';\nNavbarLink.displayName = 'Navbar.Link';\nNavbarToggle.displayName = 'Navbar.Toggle';\nexport var Navbar = Object.assign(NavbarComponent, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Link: NavbarLink,\n  Toggle: NavbarToggle\n});","map":null,"metadata":{},"sourceType":"module"}