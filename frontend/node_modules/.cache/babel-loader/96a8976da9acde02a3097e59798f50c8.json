{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { forwardRef } from 'react';\nimport { HelperText, useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var Select = forwardRef(function (_ref, ref) {\n  var addon = _ref.addon,\n    children = _ref.children,\n    className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'gray' : _ref$color,\n    helperText = _ref.helperText,\n    Icon = _ref.icon,\n    shadow = _ref.shadow,\n    _ref$sizing = _ref.sizing,\n    sizing = _ref$sizing === void 0 ? 'md' : _ref$sizing,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"addon\", \"children\", \"className\", \"color\", \"helperText\", \"icon\", \"shadow\", \"sizing\", \"theme\"]);\n  var theme = mergeDeep(useTheme().theme.select, customTheme);\n  return _jsxs(\"div\", {\n    className: classNames(theme.base, className),\n    children: [addon && _jsx(\"span\", {\n      className: theme.addon,\n      children: addon\n    }), _jsxs(\"div\", {\n      className: theme.field.base,\n      children: [Icon && _jsx(\"div\", {\n        className: theme.field.icon.base,\n        children: _jsx(Icon, {\n          className: theme.field.icon.svg\n        })\n      }), _jsx(\"select\", _objectSpread({\n        className: classNames(theme.field.select.base, theme.field.select.colors[color], theme.field.select.withIcon[Icon ? 'on' : 'off'], theme.field.select.withAddon[addon ? 'on' : 'off'], theme.field.select.withShadow[shadow ? 'on' : 'off'], theme.field.select.sizes[sizing])\n      }, props, {\n        ref: ref,\n        children: children\n      })), helperText && _jsx(HelperText, {\n        color: color,\n        children: helperText\n      })]\n    })]\n  });\n});\nSelect.displayName = 'Select';","map":null,"metadata":{},"sourceType":"module"}