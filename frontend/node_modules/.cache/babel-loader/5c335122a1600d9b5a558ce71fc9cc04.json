{"ast":null,"code":"import _defineProperty from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { HiChevronLeft, HiChevronRight } from 'react-icons/hi';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { range } from '../../helpers/range';\nimport { PaginationButton, PaginationNavigation } from './PaginationButton';\nvar PaginationComponent = function PaginationComponent(_ref) {\n  var className = _ref.className,\n    currentPage = _ref.currentPage,\n    _ref$layout = _ref.layout,\n    layout = _ref$layout === void 0 ? 'pagination' : _ref$layout,\n    _ref$nextLabel = _ref.nextLabel,\n    nextLabel = _ref$nextLabel === void 0 ? 'Next' : _ref$nextLabel,\n    onPageChange = _ref.onPageChange,\n    _ref$previousLabel = _ref.previousLabel,\n    previousLabel = _ref$previousLabel === void 0 ? 'Previous' : _ref$previousLabel,\n    _ref$renderPagination = _ref.renderPaginationButton,\n    renderPaginationButton = _ref$renderPagination === void 0 ? function (props) {\n      return _jsx(PaginationButton, _objectSpread({}, props));\n    } : _ref$renderPagination,\n    _ref$showIcons = _ref.showIcons,\n    showIcon = _ref$showIcons === void 0 ? false : _ref$showIcons,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    totalPages = _ref.totalPages,\n    props = _objectWithoutProperties(_ref, [\"className\", \"currentPage\", \"layout\", \"nextLabel\", \"onPageChange\", \"previousLabel\", \"renderPaginationButton\", \"showIcons\", \"theme\", \"totalPages\"]);\n  var theme = mergeDeep(useTheme().theme.pagination, customTheme);\n  var firstPage = Math.max(1, currentPage - 3);\n  var lastPage = Math.min(currentPage + 3, totalPages);\n  var goToNextPage = function goToNextPage() {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  };\n  var goToPreviousPage = function goToPreviousPage() {\n    onPageChange(Math.max(currentPage - 1, 1));\n  };\n  return _jsxs(\"nav\", _objectSpread({\n    className: classNames(theme.base, className)\n  }, props, {\n    children: [layout === 'table' && _jsxs(\"div\", {\n      className: theme.layout.table.base,\n      children: [\"Showing \", _jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: firstPage\n      }), \" to\\xA0\", _jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: lastPage\n      }), \" of\\xA0\", _jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: totalPages\n      }), \" Entries\"]\n    }), _jsxs(\"ul\", {\n      className: theme.pages.base,\n      children: [_jsx(\"li\", {\n        children: _jsxs(PaginationNavigation, {\n          className: classNames(theme.pages.previous.base, showIcon && theme.pages.showIcon),\n          onClick: goToPreviousPage,\n          disabled: currentPage === 1,\n          children: [showIcon && _jsx(HiChevronLeft, {\n            \"aria-hidden\": true,\n            className: theme.pages.previous.icon\n          }), previousLabel]\n        })\n      }), layout === 'pagination' && range(firstPage, lastPage).map(function (page) {\n        return _jsx(\"li\", {\n          \"aria-current\": page === currentPage ? 'page' : undefined,\n          children: renderPaginationButton({\n            className: classNames(theme.pages.selector.base, _defineProperty({}, theme.pages.selector.active, currentPage === page)),\n            active: page === currentPage,\n            onClick: function onClick() {\n              return onPageChange(page);\n            },\n            children: page\n          })\n        }, page);\n      }), _jsx(\"li\", {\n        children: _jsxs(PaginationNavigation, {\n          className: classNames(theme.pages.next.base, showIcon && theme.pages.showIcon),\n          onClick: goToNextPage,\n          disabled: currentPage === totalPages,\n          children: [nextLabel, showIcon && _jsx(HiChevronRight, {\n            \"aria-hidden\": true,\n            className: theme.pages.next.icon\n          })]\n        })\n      })]\n    })]\n  }));\n};\nPaginationComponent.displayName = 'Pagination';\nexport var Pagination = Object.assign(PaginationComponent, {\n  Button: PaginationButton\n});","map":null,"metadata":{},"sourceType":"module"}