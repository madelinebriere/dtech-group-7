{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { AccordionPanelContext } from './AccordionPanelContext';\nexport var AccordionPanel = function AccordionPanel(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, [\"children\"]);\n  var alwaysOpen = props.alwaysOpen;\n  var _useState = useState(props.isOpen),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    _setOpen = _useState2[1];\n  var provider = alwaysOpen ? _objectSpread({}, props, {\n    isOpen: isOpen,\n    setOpen: function setOpen() {\n      return _setOpen(!isOpen);\n    }\n  }) : props;\n  return _jsx(AccordionPanelContext.Provider, {\n    value: provider,\n    children: children\n  });\n};","map":null,"metadata":{},"sourceType":"module"}