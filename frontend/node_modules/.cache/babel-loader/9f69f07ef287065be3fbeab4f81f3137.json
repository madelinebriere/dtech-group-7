{"ast":null,"code":"import _defineProperty from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ToastContext } from './ToastContext';\nimport { ToastToggle } from './ToastToggle';\nvar durationClasses = {\n  75: 'duration-75',\n  100: 'duration-100',\n  150: 'duration-150',\n  200: 'duration-200',\n  300: 'duration-300',\n  500: 'duration-500',\n  700: 'duration-700',\n  1000: 'duration-1000'\n};\nvar ToastComponent = function ToastComponent(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 300 : _ref$duration,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"duration\", \"theme\"]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isClosed = _useState2[0],\n    setIsClosed = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRemoved = _useState4[0],\n    setIsRemoved = _useState4[1];\n  var theme = mergeDeep(useTheme().theme.toast, customTheme);\n  return _jsx(ToastContext.Provider, {\n    value: {\n      duration: duration,\n      isClosed: isClosed,\n      isRemoved: isRemoved,\n      setIsClosed: setIsClosed,\n      setIsRemoved: setIsRemoved\n    },\n    children: _jsx(\"div\", _objectSpread({\n      \"data-testid\": \"flowbite-toast\",\n      className: classNames(theme.root.base, durationClasses[duration], _defineProperty({}, theme.root.closed, isClosed), _defineProperty({}, theme.root.removed, isRemoved), className)\n    }, props, {\n      children: children\n    }))\n  });\n};\nToastComponent.displayName = 'Toast';\nToastToggle.displayName = 'Toast.Toggle';\nexport var Toast = Object.assign(ToastComponent, {\n  Toggle: ToastToggle\n});","map":null,"metadata":{},"sourceType":"module"}