{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n/**\n * Check if provided parameter is plain object\n * @param item\n * @returns boolean\n */\nfunction isObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction cloneDeep(source) {\n  if (!isObject(source)) {\n    return source;\n  }\n  var output = _objectSpread({}, source);\n  Object.keys(source).forEach(function (key) {\n    output[key] = cloneDeep(source[key]);\n  });\n  return output;\n}\n/**\n * Merge and deep copy the values of all of the enumerable own properties of target object from source object to a new object\n * @param target The target object to get properties from.\n * @param source The source object from which to copy properties.\n * @return A new merged and deep copied object.\n */\nexport function mergeDeep(target, source) {\n  if (isObject(source) && Object.keys(source).length === 0) {\n    return cloneDeep(_objectSpread({}, target, source));\n  }\n  var output = _objectSpread({}, target, source);\n  if (isObject(source) && isObject(target)) {\n    Object.keys(source).forEach(function (key) {\n      if (isObject(source[key]) && key in target && isObject(target[key])) {\n        output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        output[key] = isObject(source[key]) ? cloneDeep(source[key]) : source[key];\n      }\n    });\n  }\n  return output;\n}","map":null,"metadata":{},"sourceType":"module"}