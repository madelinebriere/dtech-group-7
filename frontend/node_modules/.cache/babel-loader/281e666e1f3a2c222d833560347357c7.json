{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var Label = function Label(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'default' : _ref$color,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    value = _ref.value,\n    props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"color\", \"disabled\", \"theme\", \"value\"]);\n  var theme = mergeDeep(useTheme().theme.label, customTheme);\n  return _jsx(\"label\", _objectSpread({\n    className: classNames(theme.root.base, theme.root.colors[color], disabled && theme.root.disabled, className),\n    \"data-testid\": \"flowbite-label\"\n  }, props, {\n    children: value ?? children ?? ''\n  }));\n};\nLabel.displayName = 'Label';","map":null,"metadata":{},"sourceType":"module"}