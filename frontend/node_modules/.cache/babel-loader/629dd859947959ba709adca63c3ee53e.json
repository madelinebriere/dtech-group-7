{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { forwardRef } from 'react';\nimport { HelperText, useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var TextInput = forwardRef(function (_ref, ref) {\n  var addon = _ref.addon,\n    className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'gray' : _ref$color,\n    helperText = _ref.helperText,\n    Icon = _ref.icon,\n    RightIcon = _ref.rightIcon,\n    shadow = _ref.shadow,\n    _ref$sizing = _ref.sizing,\n    sizing = _ref$sizing === void 0 ? 'md' : _ref$sizing,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"addon\", \"className\", \"color\", \"helperText\", \"icon\", \"rightIcon\", \"shadow\", \"sizing\", \"theme\"]);\n  var theme = mergeDeep(useTheme().theme.textInput, customTheme);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"div\", {\n      className: classNames(theme.base, className),\n      children: [addon && _jsx(\"span\", {\n        className: theme.addon,\n        children: addon\n      }), _jsxs(\"div\", {\n        className: theme.field.base,\n        children: [Icon && _jsx(\"div\", {\n          className: theme.field.icon.base,\n          children: _jsx(Icon, {\n            className: theme.field.icon.svg\n          })\n        }), RightIcon && _jsx(\"div\", {\n          \"data-testid\": \"right-icon\",\n          className: theme.field.rightIcon.base,\n          children: _jsx(RightIcon, {\n            className: theme.field.rightIcon.svg\n          })\n        }), _jsx(\"input\", _objectSpread({\n          className: classNames(theme.field.input.base, theme.field.input.colors[color], theme.field.input.withIcon[Icon ? 'on' : 'off'], theme.field.input.withAddon[addon ? 'on' : 'off'], theme.field.input.withShadow[shadow ? 'on' : 'off'], theme.field.input.sizes[sizing])\n        }, props, {\n          ref: ref\n        }))]\n      })]\n    }), helperText && _jsx(HelperText, {\n      color: color,\n      children: helperText\n    })]\n  });\n});\nTextInput.displayName = 'TextInput';","map":null,"metadata":{},"sourceType":"module"}