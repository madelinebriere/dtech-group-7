{"ast":null,"code":"import _defineProperty from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, forwardRef, useEffect, useId, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { TabItem } from './TabItem';\nexport var TabsComponent = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    onActiveTabChange = _ref.onActiveTabChange,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? 'default' : _ref$style,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onActiveTabChange\", \"style\", \"theme\"]);\n  var theme = mergeDeep(useTheme().theme.tab, customTheme);\n  var id = useId();\n  var tabs = useMemo(function () {\n    return Children.map(children, function (_ref2) {\n      var props = _ref2.props;\n      return props;\n    });\n  }, [children]);\n  var tabRefs = useRef([]);\n  var _useState = useState(Math.max(0, tabs.findIndex(function (tab) {\n      return tab.active;\n    }))),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState(-1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    focusedTab = _useState4[0],\n    setFocusedTab = _useState4[1];\n  var setActiveTabWithCallback = function setActiveTabWithCallback(activeTab) {\n    setActiveTab(activeTab);\n    if (onActiveTabChange) onActiveTabChange(activeTab);\n  };\n  var handleClick = function handleClick(_ref3) {\n    var target = _ref3.target;\n    setActiveTabWithCallback(target);\n    setFocusedTab(target);\n  };\n  var handleKeyboard = function handleKeyboard(_ref4) {\n    var event = _ref4.event,\n      target = _ref4.target;\n    if (event.key === 'ArrowLeft') {\n      setFocusedTab(Math.max(0, focusedTab - 1));\n    }\n    if (event.key === 'ArrowRight') {\n      setFocusedTab(Math.min(tabs.length - 1, focusedTab + 1));\n    }\n    if (event.key === 'Enter') {\n      setActiveTabWithCallback(target);\n      setFocusedTab(target);\n    }\n  };\n  var tabItemStyle = theme.tablist.tabitem.styles[style];\n  useEffect(function () {\n    tabRefs.current[focusedTab]?.focus();\n  }, [focusedTab]);\n  useImperativeHandle(ref, function () {\n    return {\n      setActiveTab: setActiveTabWithCallback\n    };\n  });\n  return _jsxs(\"div\", {\n    className: classNames(theme.base, className),\n    children: [_jsx(\"div\", _objectSpread({\n      \"aria-label\": \"Tabs\",\n      role: \"tablist\",\n      className: classNames(theme.tablist.base, theme.tablist.styles[style], className)\n    }, props, {\n      children: tabs.map(function (tab, index) {\n        var _classNames;\n        return _jsxs(\"button\", {\n          type: \"button\",\n          \"aria-controls\": \"\".concat(id, \"-tabpanel-\").concat(index),\n          \"aria-selected\": index === activeTab,\n          className: classNames(theme.tablist.tabitem.base, _objectSpread({}, tabItemStyle), (_classNames = {}, _defineProperty(_classNames, tabItemStyle.active.on, index === activeTab), _defineProperty(_classNames, tabItemStyle.active.off, index !== activeTab && !tab.disabled), _classNames)),\n          disabled: tab.disabled,\n          id: \"\".concat(id, \"-tab-\").concat(index),\n          onClick: function onClick() {\n            return handleClick({\n              target: index\n            });\n          },\n          onKeyDown: function onKeyDown(event) {\n            return handleKeyboard({\n              event: event,\n              target: index\n            });\n          },\n          ref: function ref(element) {\n            return tabRefs.current[index] = element;\n          },\n          role: \"tab\",\n          tabIndex: index === focusedTab ? 0 : -1,\n          children: [tab.icon && _jsx(tab.icon, {\n            className: theme.tablist.tabitem.icon\n          }), tab.title]\n        }, index);\n      })\n    })), _jsx(\"div\", {\n      children: tabs.map(function (tab, index) {\n        return _jsx(\"div\", {\n          \"aria-labelledby\": \"\".concat(id, \"-tab-\").concat(index),\n          className: theme.tabpanel,\n          hidden: index !== activeTab,\n          id: \"\".concat(id, \"-tabpanel-\").concat(index),\n          role: \"tabpanel\",\n          tabIndex: 0,\n          children: tab.children\n        }, index);\n      })\n    })]\n  });\n});\nTabsComponent.displayName = 'Tabs.Group';\nexport var Tabs = {\n  Group: TabsComponent,\n  Item: TabItem\n};","map":null,"metadata":{},"sourceType":"module"}