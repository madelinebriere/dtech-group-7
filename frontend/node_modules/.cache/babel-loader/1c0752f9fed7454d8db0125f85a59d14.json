{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { forwardRef } from 'react';\nimport { HelperText, useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var Textarea = forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'gray' : _ref$color,\n    helperText = _ref.helperText,\n    shadow = _ref.shadow,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"className\", \"color\", \"helperText\", \"shadow\", \"theme\"]);\n  var theme = mergeDeep(useTheme().theme.textarea, customTheme);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"textarea\", _objectSpread({\n      ref: ref,\n      className: classNames(theme.base, theme.colors[color], theme.withShadow[shadow ? 'on' : 'off'], className)\n    }, props)), helperText && _jsx(HelperText, {\n      color: color,\n      children: helperText\n    })]\n  });\n});\nTextarea.displayName = 'Textarea';","map":null,"metadata":{},"sourceType":"module"}