{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { useTheme } from '../../';\nimport { ThemeContext } from '../../components/Flowbite/ThemeContext';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var DarkThemeToggle = function DarkThemeToggle(_ref) {\n  var className = _ref.className,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    props = _objectWithoutProperties(_ref, [\"className\", \"theme\"]);\n  var theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n  var _useContext = useContext(ThemeContext),\n    mode = _useContext.mode,\n    toggleMode = _useContext.toggleMode;\n  return _jsx(\"button\", _objectSpread({\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    onClick: toggleMode,\n    type: \"button\",\n    className: classNames(theme.root.base, className)\n  }, props, {\n    children: mode === 'dark' ? _jsx(HiSun, {\n      \"aria-label\": \"Currently dark mode\",\n      className: theme.root.icon\n    }) : _jsx(HiMoon, {\n      \"aria-label\": \"Currently light mode\",\n      className: theme.root.icon\n    })\n  }));\n};\nDarkThemeToggle.displayName = 'DarkThemeToggle';","map":null,"metadata":{},"sourceType":"module"}