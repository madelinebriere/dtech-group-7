{"ast":null,"code":"import _objectSpread from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yyk/Desktop/frontend-editing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { HiX } from 'react-icons/hi';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport var Alert = function Alert(_ref) {\n  var additionalContent = _ref.additionalContent,\n    children = _ref.children,\n    className = _ref.className,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'info' : _ref$color,\n    Icon = _ref.icon,\n    onDismiss = _ref.onDismiss,\n    _ref$rounded = _ref.rounded,\n    rounded = _ref$rounded === void 0 ? true : _ref$rounded,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    withBorderAccent = _ref.withBorderAccent,\n    props = _objectWithoutProperties(_ref, [\"additionalContent\", \"children\", \"className\", \"color\", \"icon\", \"onDismiss\", \"rounded\", \"theme\", \"withBorderAccent\"]);\n  var theme = mergeDeep(useTheme().theme.alert, customTheme);\n  return _jsxs(\"div\", _objectSpread({\n    className: classNames(theme.base, theme.color[color], rounded && theme.rounded, withBorderAccent && theme.borderAccent, className),\n    role: \"alert\"\n  }, props, {\n    children: [_jsxs(\"div\", {\n      className: theme.wrapper,\n      \"data-testid\": \"flowbite-alert-wrapper\",\n      children: [Icon && _jsx(Icon, {\n        className: theme.icon,\n        \"data-testid\": \"flowbite-alert-icon\"\n      }), _jsx(\"div\", {\n        children: children\n      }), typeof onDismiss === 'function' && _jsx(\"button\", {\n        \"aria-label\": \"Dismiss\",\n        className: classNames(theme.closeButton.base, theme.closeButton.color[color]),\n        onClick: onDismiss,\n        type: \"button\",\n        children: _jsx(HiX, {\n          \"aria-hidden\": true,\n          className: theme.closeButton.icon\n        })\n      })]\n    }), additionalContent && _jsx(\"div\", {\n      children: additionalContent\n    })]\n  }));\n};\nAlert.displayName = 'Alert';","map":null,"metadata":{},"sourceType":"module"}